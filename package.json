{
  "name": "factoriomod-debug",
  "displayName": "Factorio Mod Debug",
  "version": "1.1.2",
  "publisher": "justarandomgeek",
  "description": "Debug Tools for developing Factorio Mods",
  "author": {
    "name": "justarandomgeek",
    "email": "justarandomgeek@live.com"
  },
  "license": "MIT",
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.50.0"
  },
  "icon": "images/factoriomod-debug-icon.png",
  "categories": [
    "Debuggers",
    "Programming Languages",
    "Linters"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/justarandomgeek/vscode-factoriomod-debug.git"
  },
  "bugs": {
    "url": "https://github.com/justarandomgeek/vscode-factoriomod-debug/issues"
  },
  "scripts": {
    "prepare": "tsc -p ./src",
    "compile": "tsc -p ./src",
    "lint": "eslint -c ./src/.eslintrc.js --ext .ts ./src",
    "watch": "tsc -w -p ./src",
    "vscode:prepublish": ".\\mod\\makerelease.sh",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "dependencies": {
    "archiver": "^5.0.2",
    "d3": "^6.2.0",
    "d3-flame-graph": "^3.1.1",
    "ini": "^1.3.6",
    "semver": "^7.3.2",
    "tree-kill": "^1.2.2",
    "vscode-debugadapter": "^1.42.1",
    "web-request": "^1.0.7"
  },
  "devDependencies": {
    "@types/archiver": "^3.1.1",
    "@types/buffers": "^0.1.31",
    "@types/ini": "^1.3.30",
    "@types/node": "^14.14.2",
    "@types/request": "^2.48.5",
    "@types/semver": "^7.3.4",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.5.0",
    "@typescript-eslint/parser": "^4.5.0",
    "eslint": "^7.12.0",
    "typescript": "^4.0.3",
    "vsce": "^1.81.1",
    "vscode-debugadapter-testsupport": "^1.42.0"
  },
  "main": "./out/extension",
  "activationEvents": [
    "onDebug",
    "onCommand:workbench.action.tasks.runTask",
    "onCommand:factorio.openchangelog",
    "onCommand:factorio.compile",
    "onCommand:factorio.datestamp",
    "onCommand:factorio.package",
    "onCommand:factorio.version",
    "onCommand:factorio.upload",
    "onCommand:factorio.publish",
    "workspaceContains:**/changelog.txt",
    "workspaceContains:**/info.json",
    "onLanguage:factorio-locale",
    "onLanguage:factorio-changelog",
    "onView:factoriomods"
  ],
  "contributes": {
    "colors": [
      {
        "id": "factorio.ProfileTimerForeground",
        "description": "Color for line timer text when running Factorio Mod profiler",
        "defaults": {
          "dark": "#ffffff",
          "highContrast": "#ffffff",
          "light": "#000000"
        }
      },
      {
        "id": "factorio.ProfileFunctionTimerForeground",
        "description": "Color for function timer text when running Factorio Mod profiler",
        "defaults": {
          "dark": "#ffffff66",
          "highContrast": "#ffffff",
          "light": "#000000"
        }
      }
    ],
    "configuration": [
      {
        "title": "Factorio",
        "properties": {
          "factorio.portal.username": {
            "type": "string",
            "description": "Username for Factorio Mod Portal to enable automatically uploading mods. If not set, will use environment variable FACTORIO_PORTAL_USERNAME if set, or prompt for a username.",
            "scope": "machine-overridable"
          },
          "factorio.portal.password": {
            "type": "string",
            "description": "Password for Factorio Mod Portal to enable automatically uploading mods. If not set, will use environment variable FACTORIO_PORTAL_PASSWORD if set, or prompt for a password.",
            "scope": "machine-overridable"
          },
          "factorio.package.preparingCommitMessage": {
            "type": "string",
            "description": "Commit message for preparing release. Use `$VERSION` or `$MODNAME` to insert the version number or name.",
            "default": "preparing release of version $VERSION",
            "pattern": "\\$VERSION"
          },
          "factorio.package.movedToCommitMessage": {
            "type": "string",
            "description": "Commit message for raising version after release. Use `$VERSION` or `$MODNAME` to insert the version number or name.",
            "default": "moved to version $VERSION",
            "pattern": "\\$VERSION"
          },
          "factorio.package.autoCommitAuthor": {
            "type": "string",
            "description": "Author for automatically created commits",
            "default": "compilatron <compilatron@justarandomgeek.com>"
          },
          "factorio.package.tagName": {
            "type": "string",
            "description": "Template for release tag names. Use `$VERSION` or `$MODNAME` to insert the version number or name.",
            "default": "$VERSION",
            "pattern": "\\$VERSION"
          },
          "factorio.package.tagVPrefix": {
            "type": "boolean",
            "description": "Prefix tag version number with 'v'",
            "deprecationMessage": "Use tagName instead",
            "default": false
          },
          "factorio.package.tagMessage": {
            "type": "string",
            "description": "Message for version tags. Use `$VERSION` or `$MODNAME` to insert the version number or name."
          },
          "factorio.package.zipLocation": {
            "type": "string",
            "description": "Location to place mod zip packages.",
            "enumDescriptions": [
              "Inside Mod (sibling of info.json)",
              "Outside Mod (one level up from info.json)"
            ],
            "enum": [
              "inside",
              "outside"
            ],
            "default": "inside"
          },
          "factorio.package.removeZipAfterPublish": {
            "type": "boolean",
            "description": "Remove mod zip after successful upload in Publish task",
            "default": false
          },
          "factorio.debug.expandablePrint": {
            "type": "boolean",
            "description": "Make expandable log items from `__DebugAdapter.print({...})`.",
            "default": false
          },
          "factorio.profile.timerHighlightColor": {
            "type": "string",
            "description": "Color to be used to highlight hot timers",
            "pattern": "^#[0-9a-fA-F]{6}$",
            "default": "#FF0000"
          },
          "factorio.profile.displayAverageTime": {
            "type": "boolean",
            "description": "Display average time in labels instead of cumulative time.",
            "default": true
          },
          "factorio.profile.colorBy": {
            "type": "string",
            "description": "Which attribute to color labels by",
            "enum": [
              "count",
              "totaltime",
              "averagetime"
            ],
            "default": "totaltime"
          },
          "factorio.profile.colorScaleFactor": {
            "type": "number",
            "description": "Adjustment factor for color scale function",
            "default": 1,
            "exclusiveMinimum": 0
          },
          "factorio.profile.colorScaleMode": {
            "type": "string",
            "description": "Scale function for coloring timer labels",
            "enum": [
              "boost",
              "linear",
              "mute"
            ],
            "default": "boost"
          },
          "factorio.profile.rulers": {
            "type": "array",
            "description": "Ruler colors and thresholds to display hotspots in the scrollbar",
            "items": {
              "oneOf": [
                {
                  "required": [
                    "color"
                  ],
                  "properties": {
                    "color": {
                      "type": "string",
                      "pattern": "^#[0-9a-fA-F]{1,8}$"
                    }
                  }
                },
                {
                  "required": [
                    "themeColor"
                  ],
                  "properties": {
                    "themeColor": {
                      "type": "string"
                    }
                  }
                }
              ],
              "required": [
                "threshold"
              ],
              "properties": {
                "threshold": {
                  "type": "number",
                  "maximum": 1,
                  "minimum": 0
                },
                "lane": {
                  "enum": [
                    "Left",
                    "Center",
                    "Right",
                    "Full"
                  ],
                  "default": "Right"
                }
              }
            },
            "default": [
              {
                "color": "#FF0000",
                "threshold": 0.75
              },
              {
                "color": "#FF6600",
                "threshold": 0.5
              }
            ]
          }
        }
      }
    ],
    "taskDefinitions": [
      {
        "type": "factorio",
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string",
            "enum": [
              "datestamp",
              "package",
              "version",
              "upload",
              "publish",
              "compile",
              "adjustMods"
            ]
          },
          "modname": {
            "type": "string"
          },
          "adjustMods": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string",
                  "pattern": "(\\d+\\.){2}\\d+"
                }
              ]
            }
          },
          "modsPath": {
            "type": "string"
          },
          "disableExtraMods": {
            "type": "boolean"
          },
          "allowDisableBaseMod": {
            "type": "boolean"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "factorio.openchangelog",
        "category": "Factorio",
        "title": "Open Changelog",
        "icon": "$(versions)"
      },
      {
        "command": "factorio.compile",
        "category": "Factorio",
        "title": "Compile"
      },
      {
        "command": "factorio.datestamp",
        "category": "Factorio",
        "title": "Datestamp Changelog",
        "icon": "$(calendar)"
      },
      {
        "command": "factorio.package",
        "category": "Factorio",
        "title": "Package Mod",
        "icon": "$(package)"
      },
      {
        "command": "factorio.version",
        "category": "Factorio",
        "title": "Increment Version",
        "icon": "$(tag)"
      },
      {
        "command": "factorio.upload",
        "category": "Factorio",
        "title": "Upload to Portal",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "factorio.publish",
        "category": "Factorio",
        "title": "Publish Mod",
        "icon": "$(repo-push)"
      }
    ],
    "views": {
      "scm": [
        {
          "id": "factoriomods",
          "name": "Factorio Mod Packages",
          "icon": "images/viewicon.svg",
          "contextualTitle": "Factorio Mod Packages"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "factorio.openchangelog",
          "when": "false"
        },
        {
          "command": "factorio.compile",
          "when": "false"
        },
        {
          "command": "factorio.datestamp",
          "when": "false"
        },
        {
          "command": "factorio.package",
          "when": "false"
        },
        {
          "command": "factorio.version",
          "when": "false"
        },
        {
          "command": "factorio.upload",
          "when": "false"
        },
        {
          "command": "factorio.publish",
          "when": "false"
        }
      ],
      "view/item/context": [
        {
          "command": "factorio.openchangelog",
          "when": "view == factoriomods && viewItem =~ /haschangelog/",
          "group": "1_info@1"
        },
        {
          "command": "factorio.compile",
          "when": "view == factoriomods && viewItem =~ /hascompile/",
          "group": "2_basic@1"
        },
        {
          "command": "factorio.datestamp",
          "when": "view == factoriomods && viewItem =~ /latest/ && viewItem =~ /haschangelog/",
          "group": "2_basic@2"
        },
        {
          "command": "factorio.package",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "2_basic@3"
        },
        {
          "command": "factorio.version",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "2_basic@4"
        },
        {
          "command": "factorio.upload",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "2_basic@5"
        },
        {
          "command": "factorio.publish",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "3_publish@1"
        },
        {
          "command": "factorio.openchangelog",
          "when": "view == factoriomods && viewItem =~ /haschangelog/",
          "group": "inline@1"
        },
        {
          "command": "factorio.datestamp",
          "when": "view == factoriomods && viewItem =~ /latest/ && viewItem =~ /haschangelog/",
          "group": "inline@2"
        },
        {
          "command": "factorio.package",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "inline@3"
        },
        {
          "command": "factorio.version",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "inline@4"
        },
        {
          "command": "factorio.upload",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "inline@5"
        },
        {
          "command": "factorio.publish",
          "when": "view == factoriomods && viewItem =~ /latest/",
          "group": "inline@6"
        }
      ]
    },
    "languages": [
      {
        "id": "factorio-locale",
        "aliases": [
          "Factorio Locale",
          "factorio-locale"
        ],
        "extensions": [
          ".cfg"
        ],
        "configuration": "./factorio-locale.language-configuration.json"
      },
      {
        "id": "factorio-changelog",
        "aliases": [
          "Factorio Changelog",
          "factorio-changelog"
        ],
        "filenames": [
          "changelog.txt"
        ],
        "configuration": "./factorio-changelog.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "factorio-locale",
        "scopeName": "source.factorio-locale",
        "path": "./syntax/factorio-locale.tmLanguage.json"
      },
      {
        "language": "factorio-changelog",
        "scopeName": "source.factorio-changelog",
        "path": "./syntax/factorio-changelog.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "factorio-changelog",
        "path": "./snippets/factorio-changelog.json"
      },
      {
        "language": "factorio-locale",
        "path": "./snippets/factorio-locale.json"
      }
    ],
    "configurationDefaults": {
      "[factorio-changelog]": {
        "editor.detectIndentation": false,
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "gitlens.codeLens.symbolScopes": [
          "Namespace",
          "!Class"
        ]
      }
    },
    "jsonValidation": [
      {
        "fileMatch": [
          "map-gen-settings.json",
          "map-gen-settings.*.json",
          "*.map-gen-settings.json",
          "map-gen-settings.example.json"
        ],
        "url": "./schema/mapgen.json"
      },
      {
        "fileMatch": [
          "map-settings.json",
          "map-settings.*.json",
          "*.map-settings.json",
          "map-settings.example.json"
        ],
        "url": "./schema/mapsettings.json"
      },
      {
        "fileMatch": [
          "server-settings.json",
          "server-settings.*.json",
          "*.server-settings.json",
          "server-settings.example.json"
        ],
        "url": "./schema/serversettings.json"
      },
      {
        "fileMatch": [
          "info.json",
          "!locale/*/info.json",
          "!data/**/info.json",
          "!tests/**/info.json",
          "!temp/**/info.json",
          "!campaigns/*/info.json",
          "!scenarios/*/info.json",
          "!saves/**/info.json",
          "!blueprint/info.json"
        ],
        "url": "./schema/modinfo.json"
      },
      {
        "fileMatch": [
          "data/**/info.json",
          "tests/**/info.json",
          "!locale/*/info.json",
          "!campaigns/*/info.json",
          "!scenarios/*/info.json",
          "!saves/**/info.json",
          "!blueprint/info.json"
        ],
        "url": "./schema/datainfo.json"
      },
      {
        "fileMatch": "locale/*/info.json",
        "url": "./schema/localeinfo.json"
      },
      {
        "fileMatch": "scenarios/*/description.json",
        "url": "./schema/scenario.json"
      },
      {
        "fileMatch": "campaigns/*/description.json",
        "url": "./schema/campaign.json"
      },
      {
        "fileMatch": "database/instances.json",
        "url": "./schema/clusterio_instances.json"
      }
    ],
    "breakpoints": [
      {
        "language": "lua"
      }
    ],
    "debuggers": [
      {
        "type": "factoriomod",
        "label": "Factorio Mod Debug",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "properties": {
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": false,
                "examples": [
                  true
                ]
              },
              "factorioPath": {
                "type": "string",
                "description": "Path to Factorio binary.",
                "examples": [
                  "C:/Program Files (x86)/Steam/steamapps/common/Factorio/bin/x64/factorio.exe",
                  "C:/Program Files/Factorio/bin/x64/factorio.exe",
                  "~/Library/Application Support/Steam/steamapps/common/Factorio/factorio.app/Contents/MacOS/factorio",
                  "/Applications/factorio.app/Contents/MacOS/factorio",
                  "~/.factorio/bin/x64/factorio"
                ]
              },
              "nativeDebugger": {
                "type": "string",
                "description": "Native debugger to launch factorio with",
                "examples": [
                  "vsjitdebugger.exe"
                ]
              },
              "configPath": {
                "type": "string",
                "description": "Path to Factorio config.ini file."
              },
              "modsPath": {
                "type": "string",
                "description": "Absolute path to Factorio mods directory."
              },
              "manageMod": {
                "type": "boolean",
                "description": "Enable automatic management of the debugadapter mod",
                "default": true
              },
              "useInstrumentMode": {
                "type": "boolean",
                "description": "Use Instrument Mode to hook all mods. Requires Factorio >= 0.18.10",
                "default": true
              },
              "checkPrototypes": {
                "type": "boolean",
                "description": "Add --check-unused-prototype-data to factorioArgs."
              },
              "checkEvents": {
                "type": [
                  "boolean",
                  "array"
                ],
                "description": "Check for complete sets of event registrations. Boolean to enable/disable for all mods, or array of mod names.",
                "items": {
                  "type": "string"
                }
              },
              "checkGlobals": {
                "type": [
                  "boolean",
                  "array"
                ],
                "description": "Check for assignment to undefined globals. Boolean to enable/disable for all mods, or array of mod names (`#settings` and `#data` for settings/data stage).",
                "items": {
                  "type": "string"
                }
              },
              "factorioArgs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "--load-scenario",
                    "--disable-migration-window"
                  ]
                },
                "default": [],
                "description": "Extra command line arguments to pass to Factorio"
              },
              "adjustMods": {
                "description": "Dictionary of modname -> true or version string to enable, false to disable",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "string",
                      "pattern": "(\\d+\\.){2}\\d+"
                    }
                  ]
                }
              },
              "adjustModSettings": {
                "description": "List of settings to adjust before launching",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["scope","name"],
                  "properties":{
                    "scope":
                    {
                      "enum": ["startup","runtime-global","runtime-per-player"],
                      "description": "The scope of the setting to adjust"
                    },
                    "name":
                    {
                      "type":"string",
                      "description": "The prototype name of the setting to adjust"
                    },
                    "value":
                    {
                      "description": "New value for setting, omit to clear setting",
                      "type": ["boolean", "number", "string"]
                    }
                  }
                }
              },
              "disableExtraMods": {
                "description": "Disable any mods not named in `adjustMods`",
                "type": "boolean"
              },
              "allowDisableBaseMod": {
                "description": "Allow disabling the base mod. This is normally prevented, as it usually leaves the game in an unusable state.",
                "type": "boolean"
              },
              "hookSettings": {
                "type": "boolean",
                "description": "Hook Settings Stage for stepping/debug",
                "default": false
              },
              "hookData": {
                "type": "boolean",
                "description": "Hook Data Stage for stepping/debug",
                "default": false
              },
              "hookControl": {
                "type": [
                  "array",
                  "boolean"
                ],
                "description": "List of mods to hook in Control Stage, or bool to (un)hook all. Use `level` for scenario/campaign scripts.",
                "items": {
                  "type": "string"
                },
                "default": true
              },
              "hookMode": {
                "enum": [
                  "debug",
                  "profile"
                ],
                "default": "debug",
                "description": "Select hook to install. Default is `debug` for stepping. Select `profile` for live profiling."
              },
              "hookLog": {
                "type": "boolean",
                "description": "Hook `log()` and convert to Output events",
                "default": true
              },
              "keepOldLog": {
                "type": "boolean",
                "description": "When hooking `log()`, also call original `log()`",
                "default": false
              },
              "runningBreak": {
                "type": "integer",
                "description": "Frequency of `running` break event, in line hook hits. Lower value is higher performance overhead. Lower value is shorter latency on Pause command.",
                "default": 5000,
                "minimum": 1
              },
              "runningTimeout": {
                "type": "integer",
                "description": "Timeout in ms for eval and variables requests while running",
                "default": 2000,
                "minimum": 1000
              },
              "profileSlowStart": {
                "type": "integer",
                "description": "Number of events to dump profilers after every Lua stack at startup (to allow for saving for migration). Increase this if you're getting errors at startup while profiling.",
                "default": 20,
                "minimum": 0
              },
              "profileUpdateRate": {
                "type": "integer",
                "description": "Number of Lua stacks to accumulate (per mod) after slow-start before dumping. Lower value will update faster but run slower.",
                "default": 500,
                "minimum": 1
              },
              "profileLines": {
                "type": "boolean",
                "description": "Track and display execution time per-line. This greatly increases the noise/overhead in the measurments.",
                "default": true
              },
              "profileFuncs": {
                "type": "boolean",
                "description": "Track and display execution time per-function.",
                "default": true
              },
              "profileTree": {
                "type": "boolean",
                "description": "Track and display execution time on a call tree.",
                "default": true
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "factoriomod",
            "request": "launch",
            "name": "Factorio Mod Debug",
            "factorioPath": ""
          },
          {
            "type": "factoriomod",
            "request": "launch",
            "name": "Factorio Mod Debug (Settings & Data)",
            "factorioPath": "",
            "hookSettings": true,
            "hookData": true
          },
          {
            "type": "factoriomod",
            "request": "launch",
            "name": "Factorio Mod Debug (Profile)",
            "factorioPath": "",
            "hookMode": "profile"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Factorio Mod Debug: Debug",
            "description": "A new configuration for debugging Factorio mods.",
            "body": {
              "type": "factoriomod",
              "request": "launch",
              "name": "Factorio Mod Debug",
              "factorioPath": "$0"
            }
          },
          {
            "label": "Factorio Mod Debug: Profile",
            "description": "A new configuration for profiling Factorio mods.",
            "body": {
              "type": "factoriomod",
              "request": "launch",
              "name": "Factorio Mod Debug (Profile)",
              "factorioPath": "$0",
              "hookMode": "profile"
            }
          }
        ]
      }
    ]
  }
}
